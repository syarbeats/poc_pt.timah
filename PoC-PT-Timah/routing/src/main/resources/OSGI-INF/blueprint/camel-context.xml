<?xml version="1.0" encoding="UTF-8"?>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
    xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 
        http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">


    <!-- Imported OSGi services include the Transaction manager and JDBC DataSource -->
    <reference id="mysql-db" interface="javax.sql.DataSource" availability="mandatory" filter="(datasource.name=MysqlDS)" />


    <!-- ******************** Camel route definition  ********************* -->
    <camelContext xmlns="http://camel.apache.org/schema/blueprint" id="camel-jms-jdbc-demo">

        <!-- Sample route using the camel-sql component -->
        <route id="jms-sql-jms">
           <from uri="amq:SQL_IN" />
            <log message="REDELIVERED: ${header.JMSRedelivered}" />
            <log message="[JMS-SQL-JMS]Rescent File : ${body}" />
            <!--  Camel 2.10 does not support named parameters yet -->
            <convertBodyTo type="java.lang.Object[]" />
            <log message="[JMS-SQL-JMS]Rescent File After ConvertData [Convert to Object] : ${body}" />
            <to uri ="sql:INSERT INTO USERS values (#, #, #, #)" />
            <setBody>
                <constant>Data correctly written to database.</constant>
            </setBody>
            <to uri="log:AfterJDBC?level=INFO&amp;showAll=true" />
            <to uri="amq:queue:SQL_OUT" />
        </route>


        <!--  Sample route using camel-jdbc component -->
        <route id="jms-jdbc-jms (Insert Query)">
           <from uri="amq:JDBC_IN" />
            <log message="REDELIVERED: ${header.JMSRedelivered}" />
            <!-- when using XA transactions, need to set resetAutoCommit=false
                otherwise this error may be thrown:
                "java.sql.SQLException: Can't set autocommit to 'true' on an XAConnection"
            -->
            <to uri="jdbc:mysql-db?resetAutoCommit=false" />
            <setBody>
                <constant>Data correctly written to database.</constant>
            </setBody>
            <to uri="log:AfterJDBC?level=INFO&amp;showAll=true" />
            <to uri="amq:queue:JDBC_OUT" />
        </route>
        
        <route id="jms-jdbc-jms(Select Query)">
           <from uri="amq:JDBC_SELECT" />
            <log message="REDELIVERED: ${header.JMSRedelivered}" />
            <to uri="jdbc:mysql-db?resetAutoCommit=false" />   
             <log message="Query Result: ${body}" />      
            <to uri="log:AfterJDBC?level=INFO&amp;showAll=true" />
            <to uri="amq:queue:JDBC_OUT" />
        </route>


        <!--  A bit of cheating. A route that triggers only once to create the 
              DB table in embedded Derby -->
        <route id="create-db-tables" autoStartup="false">
           <from uri="timer:CreateDB?delay=2000&amp;repeatCount=1" />
            <log message="Creating DB Table using" />
            <setBody>
                <constant><![CDATA[CREATE TABLE Users (firstname VARCHAR(50) NOT NULL, lastname VARCHAR(50), login VARCHAR(12), password VARCHAR(20), PRIMARY KEY (login))]]></constant>
            </setBody>
            <log message="${body}" />
            <to uri="jdbc:mysql-db?resetAutoCommit=false" />
        </route>
    </camelContext>


    <!-- custom Camel Processor bean -->
    <bean class="org.apache.camel.demo.camel_jms_jdbc.TestProcessor" id="testProcessor" >
      <property name="simulateProcessingError" value="false" />
      <property name="errorAfterMsgs" value="2" />
    </bean>

    <!-- ********************* SQL configuration ************************** -->
    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="mysql-db"/>
    </bean>


    <!-- ********************* AMQ configuration ************************** -->
    <bean id="amq" class="org.apache.camel.component.jms.JmsComponent">
        <property name="configuration" ref="AMQConfig" />
    </bean>

    <bean id="AMQConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledCF" />
        <property name="transacted" value="false" />
        <property name="maxConcurrentConsumers" value="1" />
        <property name="cacheLevelName" value="CACHE_CONSUMER" />
    </bean>

    <bean id="pooledCF" class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
        <property name="maxConnections" value="1" />
        <property name="connectionFactory" ref="AmqCF" />
    </bean>

    <bean id="AmqCF" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616" />
        <property name="userName" value="admin" />
        <property name="password" value="admin" />
    </bean>
</blueprint>